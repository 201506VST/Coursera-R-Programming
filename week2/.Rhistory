ms14 <- mean(SP14$GradeInNum, na.rm=T) #
mf13
f(StatCsList$Credits, StatCsList$GradeInNum) # 244.99/70 = 3.499857
# UIUC Grade Point Average
f(gpa[-idTrans,]$Credits, gpa[-idTrans,]$GradeInNum) # 340.99/94 = 3.627553
# Combined GPA
f(gpa$Credits, gpa$GradeInNum)
gpa <- read.csv(file="/Users/vanilla_nadal/Desktop/Academic History.csv", head=T, sep=",")
attach(gpa)
gpa$Course.Number <- as.character(gpa$Course.Number)
gpa$Course.Name <- as.character(gpa$Course.Name)
gpa$Semester <- as.character(gpa$Semester)
len <- dim(gpa)[1]
GradeInNum <- array(0, dim=c(len, 1))
a <- 1;
for (i in 1 : len){
if(Grade[i] == 'A' || Grade[i] == 'A+')
GradeInNum[a] <- 4.00
else if(Grade[i] == 'A-')
GradeInNum[a] <- 3.67
else if(Grade[i] == 'B+')
GradeInNum[a] <- 3.33
else if(Grade[i] == 'B')
GradeInNum[a] <- 3.00
else if(Grade[i] == 'B-')
GradeInNum[a] <- 2.67
else if(Grade[i] == 'C+')
GradeInNum[a] <- 2.33
else if(Grade[i] == 'PS')
GradeInNum[a] <- NA
a <- a + 1
}
gpa <- cbind(gpa, GradeInNum)
idTrans <- (1:len)[Semester=="SU11"]
Trans <- gpa[idTrans, ]
Trans
id10 <- (1:len)[Semester=="FA10"]
FA10 <- gpa[id10, ]
FA10
id111 <- (1:len)[Semester=="SP11"]
SP11 <- gpa[id111, ]
SP11
id112 <- (1:len)[Semester=="FA11"]
FA11 <- gpa[id112, ]
FA11
id121 <- (1:len)[Semester=="SP12"]
SP12 <- gpa[id121, ]
SP12
id122 <- (1:len)[Semester=="FA12"]
FA12 <- gpa[id122, ]
FA12
id131 <- (1:len)[Semester=="SP13"]
SP13 <- gpa[id131, ]
SP13
id141 <- (1:len)[Semester=="FA13"]
FA13 <- gpa[id141, ]
FA13
id142 <- (1:len)[Semester=="SP14"]
SP14 <- gpa[id142, ]
SP14
NotAid <- (1:len)[Grade != "A" & Grade != "A+" & Grade != "PS"]
NotA <- gpa[NotAid, ]
NotA
A <- gpa[-NotAid, ]
A
ARate <- 1 - dim(NotA)[1]/dim(gpa)[1]
ARate
StatID <- grep("STAT", Course.Number, ignore.case=T)
Stat <- gpa[StatID, ]
CsID <- grep("CS", Course.Number, ignore.case=T)
MathID <- grep("MATH", Course.Number, ignore.case=T)
Math <- gpa[MathID, ]
StatCs <- append(CsID, StatID)
StatCs <- append(StatCs, MathID)
StatCs <- sort(StatCs)
StatCsList <- gpa[StatCs, ]
StatCsList
f <- function(Crdts, GIN){
n <- length(Crdts)
total <- 0
HasNA <- 0
for (i in 1:n){
if(is.na(GIN)[i])
HasNA <- 1
}
if(HasNA == 1){
id <- (1:n)[is.na(GIN)]
Crdts <- Crdts[-id]
GIN <- GIN[-id]
m <- length(Crdts)
}
else{
m <- n
}
for(i in 1:m){
total <- total + Crdts[i]*GIN[i]
}
overall <- total/sum(Crdts)
list(totalNum=total, totalCredits=sum(Crdts), overallGPA=overall)
}
# FA10 Cumulative GPA
fa10 <- f(FA10$Credits,FA10$GradeInNum)$overallGPA
fa10 # 3.821333
# SP11 Cumulative GPA
sp11 <- f(SP11$Credits,SP11$GradeInNum)$overallGPA
sp11 # 3.533333
# FA11 Cumulative GPA
fa11 <- f(FA11$Credits,FA11$GradeInNum)$overallGPA
fa11 # 3.410588
# SP12 Cumulative GPA
sp12 <- f(SP12$Credits,SP12$GradeInNum)$overallGPA
sp12 # 3.868
# FA12 Cumulative GPA
fa12 <- f(FA12$Credits,FA12$GradeInNum)$overallGPA
fa12 # 3.568824
# SP13 Cumulative GPA
sp13 <- f(SP13$Credits,SP13$GradeInNum)$overallGPA
sp13 # 3.6
# FA13 Cumulative GPA
fa13 <- f(FA13$Credits,FA13$GradeInNum)$overallGPA
fa13 # 3.410769
# SP14 Cumulative GPA
sp14 <- f(SP14$Credits,SP14$GradeInNum)$overallGPA
sp14 # 4
mf10 <- mean(FA10$GradeInNum, na.rm=T) # 3.904286
ms11 <- mean(SP11$GradeInNum, na.rm=T) # 3.666667
mf11 <- mean(FA11$GradeInNum, na.rm=T) # 3.443333
ms12 <- mean(SP12$GradeInNum, na.rm=T) # 3.868
mf12 <- mean(FA12$GradeInNum, na.rm=T) # 3.6
ms13 <- mean(SP13$GradeInNum, na.rm=T) # 3.6
mf13 <- mean(FA13$GradeInNum, na.rm=T) # 3.4175
ms14 <- mean(SP14$GradeInNum, na.rm=T) #
grades <- c(fa10, sp11, fa11, sp12, fa12, sp13, fa13, sp14)
plot(grades, xlab="Semester", type="o",
ylim=c(3.4, 4.0), ylab="Grades", main="Cumulative & Mean GPAs")
#plot(diff(grades), xlab="Semester")
grades2 <- c(mf10, ms11, mf11, ms12, mf12, ms13, mf13, ms14)
lines(grades2, xlab="Semester", type="o", lty=2,col=2)
legend("topright", c("Cumulative", "Mean"),
pch=c(1,1), lty=c(1,2), lwd=c(2,2),
col=c("black","red"))
mean(c(fa10, sp11, fa11, sp12, fa12, sp13, fa13, sp14)) # 3.63368
mean(c(mf10, ms11, mf11, ms12, mf12, ms13, mf13, ms14)) # 3.680381
# Major GPA Taken on Campus
f(StatCsList$Credits, StatCsList$GradeInNum) # 244.99/70 = 3.499857
# UIUC Grade Point Average
f(gpa[-idTrans,]$Credits, gpa[-idTrans,]$GradeInNum) # 340.99/94 = 3.627553
# Combined GPA
f(gpa$Credits, gpa$GradeInNum) # 445.33/122 = 3.650246
help(rep)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
setwd("/Users/vanilla_nadal/Coursera-Computing-for-Data-Analysis/Week2/specdata/")
ls
getmonitor.testscript()
getmonitor.testscript()
getwd()
setwd("/Users/vanilla_nadal/Coursera-Computing-for-Data-Analysis/Week2/")
getmonitor.testscript()
getmonitor.testscript()
getwd()
setwd()
setwd("~/")
getwd
getwd()
setwd("~./Desktop/Online Coursera/")
setwd("~/.Online Coursera/")
setwd("~/Online Coursera/")
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
getwd()
list()
ls()
files.list()
list.files()
list.files("/specdata")
list.files("specdata")
length(list.files("specdata"))
grep("specdata", directory)
grep("specdata", getwd())
grep("specdata", "~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
grep("specdata", "~/Desktop/Online Coursera/Coursera-R-Programming/week2/specdata")
integer(0)
integer(0)==1
integer(0)==1==True
(integer(0)==1) ==True
(integer(0)==1) ==TRUE
(integer(0)==0)
setwd("/specdata")
setwd("./specdata")
getwd()
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
getwd()
setwd("./specdata")
setwd("./specdata")
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
directory <- ("./specdata/")
directory
list.files()
list.files(directory)
list.files(directory)
data1 <- read.csv("./specdata/001.csv", header=T, sep="")
head(data1)
data1 <- read.csv("./specdata/001.csv", header=T, sep=",")
head(data1)
data2 <- read.csv("./specdata/002.csv", header=T, sep=",")
class(data2)
rbind(data1:data2)
rbind(data1,data2)
r<- rbind(data1,data2)
filenames <- as.character( list.files("./specdata/") )
filenames
filenames <- as.character( list.files(directory) )
all_files <- as.character( list.files(directory) )
getwd()
root <- "~/Downloads/pollutionmonitordata/"
directory <- paste( root, directory, "/", sep="" )
directory
file_paths <- paste(directory, all_files, sep="/")
file_paths
directory <- ("./specdata/")
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="/")
file_paths
file_paths
file_paths <- paste(directory, all_files, sep="")
file_p
file_paths
data1 <- read.csv(file_paths[1], header=T, sep=",")
View(data1)
head(data1)
current_file <- read.csv(file_paths[1], header=T, sep=",")
current_file[, pollutant]
pollutant = "sulfate"
current_file[, pollutant]
is.na(current_file[, pollutant])
!is.na(current_file[, pollutant])
current_file[, pollutant][!is.na(current_file[, pollutant])]
current_file[, pollutant]
current_file[!is.na(current_file[, pollutant]), pollutant]
append(1:5, 0:1, after = 3)
append(1:5, 0:1)
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
#getwd()
#list.files()
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[1], header=T, sep=",")
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(result)
}
pollutantmean("specdata", "sulfate", 1:10) == 4.064
pollutantmean("specdata", "sulfate", 70:72) == 1.706
pollutantmean("specdata", "sulfate", 23) == 1.281
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23) == 1.281
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(result)
}
pollutantmean("specdata", "sulfate", 1:10) == 4.064
pollutantmean("specdata", "nitrate", 70:72) == 1.706
pollutantmean("specdata", "nitrate", 23) == 1.281
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
#getwd()
#list.files()
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(result)
}
# tests
pollutantmean("specdata", "sulfate", 1:10) == 4.064
pollutantmean("specdata", "nitrate", 70:72) == 1.706
pollutantmean("specdata", "nitrate", 23) == 1.281
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
#getwd()
#list.files()
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollitant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(result)
}
pollutantmean("specdata", "nitrate", 23)
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
#getwd()
#list.files()
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(result)
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
#getwd()
#list.files()
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
# tests
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
# tests
pollutantmean("specdata", "sulfate", 1:10) == 4.064
pollutantmean("specdata", "nitrate", 70:72) == 1.706
pollutantmean("specdata", "nitrate", 23) == 1.281
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
2
submit()
submit()
submit()
directory <- ("./specdata/")
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
file_paths
current_file <- read.csv(file_paths[1], header=T, sep=",")
complete.cases(current_file)
sum(complete.cases(current_file))
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
complete <- function(directory, id = 1:332) {
# set working directory
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the length of id vector
id_len <- length(id)
complete_data <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for (i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
complete_data[j] <- sum(complete.cases(current_file))
j <- j + 1
}
result <- data.frame(id = id, nobs = complete_data)
return(result)
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
6
submit()
submit()
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the length of id vector
id_len <- length(id)
corr_vector <- rep(0, id_len)
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
cr <- corr("specdata", 150)
setwd("~/Desktop/Online Coursera/Coursera-R-Programming/week2/")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
# tests
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
summary(cr)
submit()
submit()
submit()
